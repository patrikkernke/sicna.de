/**
 *
 * Font embedding & global Mixins
 *
 */


@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,700);
@import url(https://fonts.googleapis.com/css?family=Open+Sans+Condensed:300);

// typographic variables

$base-font-size: v-rhythm(2);
$base-line-height: 1.25 * $base-font-size;
$fontFamily: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
$fontFamilyCondensed: "Open Sans Condensed", "Helvetica Neue", Helvetica, Arial, sans-serif;

$type-sizes: (
    -1: (
        font-size: $base-font-size * 0.75,
        line-height: $base-line-height,
    ),
    0: (
        font-size: $base-font-size,
        line-height: $base-line-height,
    ),
    1: (
        font-size: $base-font-size * 1.333,
        line-height: $base-line-height * 2,
    ),
    2: (
        font-size: $base-font-size * 1.778,
        line-height: $base-line-height * 2,
    ),
    3: (
        font-size: $base-font-size * 2.37,
        line-height: $base-line-height * 3,
    ),
    4: (
        font-size: $base-font-size * 3.157,
        line-height: $base-line-height * 4,
    ),
);

// private functions

@function get-type-size($level) {
    @return map-get($type-sizes, $level);
}

// public functions

@function type-scale($level) {
    @return map-get(get-type-size($level), 'font-size');
}

@function line-height($level) {
    @return map-get(get-type-size($level), 'line-height');
}


// type-mixins

@mixin type-family($weight:"normal") {
    font-family: $fontFamily;
    font-weight: 400;

    @if ($weight == "bold") {
        font-weight: 700    ;
    }
    @if ($weight == "condensed") {
        font-family: $fontFamilyCondensed;
        font-weight: 300;
    }
  
}

@mixin type-setting($level) {
    font-size: type-scale($level);
    line-height: line-height($level);
}

